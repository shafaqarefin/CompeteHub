<!DOCTYPE html>
<html lang="en">
<%- include('../partials/head.ejs') %>
<body>

    <%- include('../partials/nav.ejs') %>

    <div class="announcements content">
        <h3><%= title %></h3>
        <% if (announcement.type === "question") { %>
            <h4><%= announcement.content %></h4>
        <% } else {%>
            <p><%= announcement.content %></p>
        <% } %>
        <div>
            <p style="display: inline;">by: </p>
            <h4 style="display: inline;"><a href="/profile/<%= announcement.createdBy._id %>"><%= announcement.createdByUsername %></a></h4>
        </div>
        <% if (announcement.type === "question") { %>
            <h4 class="date blue-text"> Time Left: <%= getTimeLeft(announcement.questionSet.deadline) %></h4>
        <% } %>
        <h5>Created at: <%= getTimeSince(announcement.createdAt) %></h5>

        <%#= console.log(comp.judges) %>

        <% if (comp.judges.find(judge => judge.user.toString() === user._id.toString()) && announcement.type === "question") { %>
            <% if (announcement.questionSet.submissions && announcement.questionSet.submissions.length > 0) { %>
                <h3>Submissions</h3>
                <ul class="submissions-list">
                    <% announcement.questionSet.submissions.forEach(function(submission, index) { %>
                        <li>
                            <!-- <p><%#= submission.user._id %></p> -->
                            <p><strong>User:</strong> <%= submission.username %></p>
                            <p><strong>Uploaded at:</strong> <%= getTimeSince(submission.uploadedAt) %></p>
                            <% if (announcement.questionSet.type === "submission") { %>
                                <p><%= submission.answers[0].file %></p>
                                <a href="/<%= submission.answers[0].file %>" target="_blank">View File</a>

                                <% if (submission.scoredBy.includes(user._id)) { %>
                                    <h3>Already Scored</h3>
                                <% } else { %>
                                    <form action="/competitions/scoreSubmission/<%= comp._id %>/<%= announcementIndex %>/<%= index %>/<%= submission.user._id %>" method="POST">
                                        <input type="number" name="score" min="1" max="100" required>
                                        <button type="submit">Score Submission</button>
                                    </form>
                                <% } %>
                            <% } else { %>
                                <a href="/competitions/judgeSubmission/<%= comp._id %>/<%= announcementIndex %>/<%= index %>">Judge Submission</a>
                            <% } %>
                        </li>
                    <% }); %>
                </ul>
                <br>
                <br>
            <% } else if (announcement.questionSet.type !== "mcq") { %>
                <h2>No submissions yet</h2>
                <br>
                <br>
            <% } %>
        <% } %>

        <% if (announcement.type === "question") { %>
            <% if (getTimeLeft(announcement.questionSet.deadline) === "Time Over") { %>
                <h2>The deadline has been passed, you can no longer make submissions</h2>
            <% } else if (announcement.questionSet.submittedUsers.includes(user._id)) { %>
                <h2>You have already Answered  :) </h2>
            <% } else { %>
                <h2 class="answerlink"><a href="/competitions/<%= comp._id %>/<%= announcementIndex %>/answerQuestion">Answer Question</a></h2>
            <% } %>
        <% } %>

        <br>
        <% if (user.isAdmin || announcement.createdBy.toString() === user._id.toString()) { %>
            <button class="delete-btn" data-id="<%= comp._id %>" data-index="<%= announcementIndex %>">Delete</button>
        <% } %>

        <h3>Comments</h3>
        <form action="/competitions/<%= comp._id %>/<%= announcementIndex %>" method="POST">
            <textarea name="comment_content" rows="2" cols="50" placeholder="Post a comment..." required></textarea>
            <button type="submit">Post Comment</button>
        </form>

        <% if (announcement.comments && announcement.comments.length > 0) { %>
            <ul class="comments-list">
                <% announcement.comments.forEach(function(comment, index) { %>
                    <li>
                        <p><strong><a href="/profile/<%= comment.author._id %>"><%= comment.authorUsername %></a>:</strong> <%= comment.content %></p>
                        <h5>Created at: <%= getTimeSince(comment.createdAt) %></h5>

                        <% if (user.isAdmin || comment.author.toString() === user._id.toString()) { %>
                            <button class="delete-comment-btn" data-compid="<%= comp._id %>" data-announcementindex="<%= announcementIndex %>" data-commentindex="<%= index %>">Delete</button>
                        <% } %>
                    </li>
                <% }); %>
            </ul>
        <% } else { %>
            <p>No comments yet.</p>
        <% } %>
    </div>

    <%- include('../partials/footer.ejs') %>

    <script>

        // Function to handle announcement deletion
        const deleteAnnouncement = async (compId, index) => {
            if (confirm('Are you sure you want to delete this announcement?')) {
                try {
                    const response = await fetch(`/competitions/${compId}/${index}/delete`, {
                        method: 'DELETE'
                    });

                    if (!response.ok) {
                        throw new Error('Failed to delete announcement');
                    }

                    // Redirect to the announcement details page
                    window.location.href = `/competitions/${compId}`;
                } catch (error) {
                    console.error('Error:', error.message);
                }
            }
        };

        // Event listener for delete button click
        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', () => {
                const compId = button.dataset.id;
                const index = button.dataset.index;
                deleteAnnouncement(compId, index);
            });
        });


        // Function to handle comment deletion
        const deleteComment = async (compID, announcementIndex, commentIndex) => {
            if (confirm(`Are you sure you want to delete this comment?`)) {
                try {
                    const response = await fetch(`/competitions/${compID}/${announcementIndex}/${commentIndex}/delete`, {
                        method: 'DELETE'
                    });

                    if (!response.ok) {
                        throw new Error('Failed to delete comment');
                    }

                    // Reload the page to reflect the changes
                    location.reload();
                } catch (error) {
                    console.error('Error:', error.message);
                }
            }
        };

        // Event listener for delete comment button click
        // use console.log(button.dataset) to check data values being stored
        // found out data value keys are ALWAYS lowercased

        document.querySelectorAll('.delete-comment-btn').forEach(button => {
            button.addEventListener('click', () => {
                const compID = button.dataset.compid;
                const announcementIndex = button.dataset.announcementindex;
                const commentIndex = button.dataset.commentindex;
                deleteComment(compID, announcementIndex, commentIndex);
            });
        });

    </script>

</body>
</html>